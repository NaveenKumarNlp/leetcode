class Solution {
    public List<String> splitWordsBySeparator(List<String> words, char separator) {
        return words.stream()
        .flatMap(word -> Arrays.stream(word.split("\\" + separator)))
        .filter(word -> !word.isEmpty())
        .collect(Collectors.toList());
    }
}

class Solution {
    public List<String> splitWordsBySeparator(List<String> words, char separator) {
        List<String> nm=new ArrayList<>();
        for(int i=0;i<words.size();i++)
        {
            String arr[]=words.get(i).split("["+separator+"]");
            for(int j=0;j<arr.length;j++)
            {
                
                if(arr[j].length()>0)
                {
                    nm.add(arr[j]);
                }
            }
        }
        return nm;
    }
}

class Solution {
    public List<String> splitWordsBySeparator(List<String> words, char separator) {
        ArrayList<String> list=new ArrayList<>();
        for(String word:words){
            int startIndex=0;
            for(int i=0;i<word.length();i++){
                if(word.charAt(i)==separator && i==startIndex){
                    startIndex=i+1;
                }else if(word.charAt(i)==separator){
                    list.add(word.substring(startIndex,i));
                    startIndex=i+1;
                }
                else if(i==word.length()-1){
                    list.add(word.substring(startIndex,i+1));
                }
            }
        }
        return list;
    }
}
