
//in-place update
class Solution {
    public int[] rearrangeArray(int[] nums) { 
        for(int i=0;i<nums.length;i++){
            if(i%2==0 && nums[i]<0){
                for(int j=i+1;j<nums.length;j++){
                    if(nums[j]>=0){
                        int temp=nums[j];
                        int end=j;
                        while(end>i){
                            nums[end]=nums[end-1];
                            end--;
                        }
                        nums[i]=temp;
                        break;
                    }
                }
            }else if(i%2!=0 && nums[i]>=0){
                for(int j=i+1;j<nums.length;j++){
                    if(nums[j]<0){
                        int temp=nums[j];
                        int end=j;
                        while(end>i){
                            nums[end]=nums[end-1];
                            end--;
                        }
                        nums[i]=temp;
                        break;
                    }
                }
            }
        }
        return nums;
    }
}

class Solution {
    public int[] rearrangeArray(int[] nums) { 
        int []answer=new int[nums.length];
        int pos=0,neg=1;
        for(int i=0;i<nums.length;i++){
            if(nums[i]<0){
                answer[neg]=nums[i];
                neg+=2;
            }else{
                answer[pos]=nums[i];
                pos+=2;
            }
        }
        return answer;
    }
}

class Solution {
    public int[] rearrangeArray(int[] nums) { 
        ArrayList<Integer> pos=new ArrayList<>();
        ArrayList<Integer> neg=new ArrayList<>();
        for(int i=0;i<nums.length;i++){
            if(nums[i]<0){
                neg.add(nums[i]);
            }else{
                pos.add(nums[i]);
            }
        }
        int p=0,n=0;
        for(int i=0;i<nums.length;i+=2){
            nums[i]=pos.get(p++);
            nums[i+1]=neg.get(n++);
        }
        return nums;
    }
}
