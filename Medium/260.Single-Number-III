class Solution {
    public int[] singleNumber(int[] nums) {
        HashSet<Integer> set=new HashSet<>();
        for(int i=0;i<nums.length;i++){
            if(!set.add(nums[i])){
                set.remove(nums[i]);
            }
        }
        Iterator<Integer> itr= set.iterator(); 
        int []answer=new int[2];
        int i=0;
        while(itr.hasNext()){
            answer[i]=itr.next();
            i++;
        }
        return answer;
    }
}

public int[] singleNumber(int[] nums) {
    int result[] = new int[2];        
    int xor = nums[0];
    for (int i=1; i<nums.length; i++)
    {
        xor ^= nums[i];
    }
    
    int bit = xor & ~(xor-1);
    int num1 = 0;
    int num2 = 0;
    
    for (int num : nums)
    {
        if ((num & bit) > 0)
        {
            num1 ^= num;
        }
        else
        {
            num2 ^= num;
        }
    }
    
    result[0] = num1;
    result[1] = num2;
    return result;
}
