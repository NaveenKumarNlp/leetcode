

public class Solution {
    public boolean halvesAreAlike(String s) {
        Set<Character> vowels = new HashSet<>();
        vowels.add('a'); vowels.add('e'); vowels.add('i'); vowels.add('o'); vowels.add('u');
        vowels.add('A'); vowels.add('E'); vowels.add('I'); vowels.add('O'); vowels.add('U');

        int vowelsCount = 0;
        int midIndex = s.length() / 2;

        for (int i = 0; i < midIndex; i++) {
            char charA = s.charAt(i);
            char charB = s.charAt(midIndex + i);
            if (vowels.contains(charA)) vowelsCount++;
            if (vowels.contains(charB)) vowelsCount--;
        }

        return vowelsCount == 0;
    }
}

class Solution {
    public boolean halvesAreAlike(String s) {
        int count=0,left=0,right=s.length()-1;
        String str ="aeiouAEIOU";
        while(left<right){
            if(str.indexOf(s.charAt(left))!=-1){
                count++;
            }
            if(str.indexOf(s.charAt(right))!=-1){
                count--;
            }
            left++;
            right--;
        }
        if(count==0){
            return true;
        }else{
            return false;
        }
    }
}
