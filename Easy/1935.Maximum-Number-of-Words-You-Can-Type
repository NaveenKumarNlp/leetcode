class Solution {
    int ans = 0;
    public int canBeTypedWords(String text, String brokenLetters) {
        Set<Character> set = new HashSet();
        for (char c : brokenLetters.toCharArray()) set.add(c);

        String [] arr = text.split(" ");

        for (int i = 0; i < arr.length; i++) traverse(arr[i], set);
        return ans;
    }

    public void traverse(String s, Set<Character> set) {
        for (int i = 0; i < s.length(); i++) 
            if (set.contains(s.charAt(i))) return;
        ans++;
    }
}
class Solution {
    public int canBeTypedWords(String text, String brokenLetters) {
        int []ch=new int[26];
        for(int i=0;i<brokenLetters.length();i++){
            ch[brokenLetters.charAt(i)-'a']++;
        }
        boolean flag=true;
        int count=0;
        for(int i=0;i<text.length();i++){
            if(flag && text.charAt(i)!=' ' && ch[text.charAt(i)-'a']>0){
                flag=false;
            }
            if((i==text.length()-1 || text.charAt(i)==' ') && flag){
                count++;
            }
            if(text.charAt(i)==' '){
                flag=true;
            }
        }
        return count;
    }
}
